{"mappings":"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","sources":["script.js"],"sourcesContent":["// Import\r\n\r\nimport axios from \"axios\"\r\n\r\n// Elements\r\nconst COUNTRY_DROPDOWN_ELEMENT = document.getElementById(\"countryData\");\r\nconst CITY_DROPDOWN_ELEMENT = document.getElementById(\"cityData\");\r\nconst COUNTRY_FORM_ELEMENT = document.getElementById(\"countryDropdown\");\r\nconst CITY_FORM_ELEMENT = document.getElementById(\"cityDropdown\");\r\nconst HISTORY_SECTION_ELEMENT = document.getElementById(\"history\");\r\n\r\n// Variables\r\nconst API_LINK =\r\n  \"https://raw.githubusercontent.com/AdarshKumar9002/conutry-city-detail/main/data.json\";\r\n\r\nlet countryDropdownValue = \"\";\r\nlet cityDropdownValue = \"\";\r\n\r\n// Fetching Data\r\nconst fetchData = async () => {\r\n  let response = await axios.get(API_LINK);\r\n  response = response.data;\r\n  return response;\r\n};\r\n\r\n// Creating Option Element HTML\r\nconst createDropdownList = (key, index, dropdownElement) => {\r\n  const DROPDOWN_LIST_ELEMENT = document.createElement(\"option\");\r\n  DROPDOWN_LIST_ELEMENT.id = `option${index}`;\r\n  DROPDOWN_LIST_ELEMENT.value = key;\r\n  DROPDOWN_LIST_ELEMENT.textContent = key;\r\n  dropdownElement.appendChild(DROPDOWN_LIST_ELEMENT);\r\n};\r\n\r\n// Get all countries names\r\nconst getCountryNames = async () => {\r\n  const data = await fetchData();\r\n  const countryNames = data.map((obj) => Object.keys(obj)[0]);\r\n  return countryNames;\r\n};\r\n\r\n// filter the country name and remove duplicate names and create a single array\r\nconst filterCountryNames = async () => {\r\n  const countries = await getCountryNames();\r\n  const countryNames = [];\r\n\r\n  countries.forEach((item) => {\r\n    if (countryNames.includes(item)) {\r\n      return;\r\n    }\r\n    countryNames.push(item);\r\n  });\r\n\r\n  return countryNames;\r\n};\r\n\r\nconst countryNames = filterCountryNames().then((data) => data);\r\n\r\nconst getCountryCityMapping = async () => {\r\n  const allData = await fetchData();\r\n  const countryNames = await filterCountryNames();\r\n  let filteredCities;\r\n  const countryCityMapping = {};\r\n\r\n  countryNames.forEach((country) => {\r\n    filteredCities = allData.filter((record) => record[country]);\r\n    countryCityMapping[country] = filteredCities;\r\n  });\r\n\r\n  return countryCityMapping;\r\n};\r\n\r\nconst getCitiesByCountry = async () => {\r\n  const countryCityMapping = await getCountryCityMapping();\r\n  let cityMapping = {};\r\n\r\n  Object.keys(countryCityMapping).forEach((country) => {\r\n    const cityList = countryCityMapping[country];\r\n    const cities = cityList.map((cityRecord) => Object.values(cityRecord)[0]);\r\n    cityMapping[country] = cities;\r\n  });\r\n\r\n  return cityMapping;\r\n};\r\n\r\nconst cityList = getCitiesByCountry().then((data) => data);\r\n\r\n// Populate country the Dropdown\r\nconst populateCountryDropdown = async () => {\r\n  const countries = await countryNames;\r\n  countries.forEach((country, index) => {\r\n    createDropdownList(country, index, COUNTRY_DROPDOWN_ELEMENT);\r\n  });\r\n};\r\npopulateCountryDropdown().then((data) => data);\r\n\r\n// get the selected country from dropdown\r\nconst getSelectedCountry = () => {\r\n  countryDropdownValue = COUNTRY_DROPDOWN_ELEMENT.value;\r\n  return countryDropdownValue;\r\n};\r\n\r\n// Populate city the Dropdown\r\nconst populateCityDropdown = async (selectedCountry) => {\r\n  const cities = await cityList;\r\n  const selectedCountryCities = cities[selectedCountry];\r\n  selectedCountryCities.forEach((city, index) => {\r\n    createDropdownList(city, index, CITY_DROPDOWN_ELEMENT);\r\n  });\r\n};\r\n\r\n// get selected city from dropdown\r\nconst getSelectedCity = () => {\r\n  cityDropdownValue = CITY_DROPDOWN_ELEMENT.value;\r\n  return cityDropdownValue;\r\n};\r\n\r\n// Show histroy of selected history\r\nconst showHistory = (selectedCity) => {\r\n  const HISTORY_TITLE_ELEMENT = HISTORY_SECTION_ELEMENT.querySelector(\"h2\");\r\n  const HISTORY_PARAGRAPH_ELEMENT = HISTORY_SECTION_ELEMENT.querySelector(\"p\");\r\n  HISTORY_TITLE_ELEMENT.textContent = `History Of ${selectedCity}`;\r\n  HISTORY_PARAGRAPH_ELEMENT.textContent = `Lorem ipsum dolor sit, amet consectetur adipisicing elit. Excepturi alias, dicta placeat sapiente incidunt suscipit eius rem officiis at nisi ut corporis ipsam nemo esse a atque laboriosam! Saepe illum inventore ab. Non soluta rem sunt illo placeat provident est itaque quia sit impedit saepe maxime et, ullam tempora ratione earum atque inventore iusto nam commodi voluptate odio dolore ipsa nesciunt! Quas vitae, ipsum tempora, libero aliquam illo quo, natus nobis a commodi officiis asperiores soluta tempore obcaecati rerum aliquid numquam ab laudantium facere! Fuga, aliquid delectus quaerat eveniet unde eius dignissimos quo consequuntur quibusdam earum, minima voluptates omnis quas!`;\r\n};\r\n\r\n// Country form submit eventlistener\r\nCOUNTRY_FORM_ELEMENT.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  getSelectedCountry();\r\n  CITY_DROPDOWN_ELEMENT.innerHTML = \"\";\r\n  CITY_DROPDOWN_ELEMENT.insertAdjacentHTML(\r\n    \"afterbegin\",\r\n    `<option> Select a City </option>`\r\n  );\r\n  populateCityDropdown(countryDropdownValue);\r\n});\r\n\r\n// City form submit eventlistener\r\nCITY_FORM_ELEMENT.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  getSelectedCity();\r\n  CITY_DROPDOWN_ELEMENT.innerHTML = \"\";\r\n  showHistory(countryDropdownValue);\r\n});\r\n"],"names":[],"version":3,"file":"index.js.map"}